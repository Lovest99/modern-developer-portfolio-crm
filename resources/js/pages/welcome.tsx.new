import { type SharedData } from '@/types';
import { Head, Link, usePage } from '@inertiajs/react';
import { useEffect, useState } from 'react';

export default function Welcome() {
    const { auth } = usePage<SharedData>().props;
    const [isScrolled, setIsScrolled] = useState(false);

    // Handle scroll effect for the navbar
    useEffect(() => {
        const handleScroll = () => {
            setIsScrolled(window.scrollY > 50);
        };
        window.addEventListener('scroll', handleScroll);
        return () => window.removeEventListener('scroll', handleScroll);
    }, []);

    // Add JavaScript for auto-swipe recommendations
    useEffect(() => {
        // Wait for DOM to be fully loaded
        const initCarousel = () => {
            // Get carousel elements
            const carousel = document.getElementById('recommendationsCarousel');
            const prevBtn = document.getElementById('prevRecommendation');
            const nextBtn = document.getElementById('nextRecommendation');

            if (!carousel || !prevBtn || !nextBtn) return;

            // Variables
            let currentSlide = 0;
            const slides = carousel.children;
            const totalSlides = slides.length;
            let autoSwipeInterval;

            // Initialize
            updateCarousel();
            startAutoSwipe();

            // Event listeners
            prevBtn.addEventListener('click', () => {
                currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
                updateCarousel();
                resetAutoSwipe();
            });

            nextBtn.addEventListener('click', () => {
                currentSlide = (currentSlide + 1) % totalSlides;
                updateCarousel();
                resetAutoSwipe();
            });

            // Pause auto-swipe on hover
            carousel.parentElement.addEventListener('mouseenter', () => {
                clearInterval(autoSwipeInterval);
            });

            carousel.parentElement.addEventListener('mouseleave', () => {
                startAutoSwipe();
            });

            // Functions
            function updateCarousel() {
                const offset = -currentSlide * 100;
                carousel.style.transform = `translateX(${offset}%)`;
            }

            function startAutoSwipe() {
                autoSwipeInterval = setInterval(() => {
                    currentSlide = (currentSlide + 1) % totalSlides;
                    updateCarousel();
                }, 5000); // Change slide every 5 seconds
            }

            function resetAutoSwipe() {
                clearInterval(autoSwipeInterval);
                startAutoSwipe();
            }
        };

        // Initialize after a short delay to ensure DOM is ready
        setTimeout(initCarousel, 500);

        // Cleanup function
        return () => {
            const carousel = document.getElementById('recommendationsCarousel');
            const prevBtn = document.getElementById('prevRecommendation');
            const nextBtn = document.getElementById('nextRecommendation');

            if (prevBtn) {
                prevBtn.removeEventListener('click', () => {});
            }
            if (nextBtn) {
                nextBtn.removeEventListener('click', () => {});
            }
            if (carousel && carousel.parentElement) {
                carousel.parentElement.removeEventListener('mouseenter', () => {});
                carousel.parentElement.removeEventListener('mouseleave', () => {});
            }
        };
    }, []);

    return (
        <>
            <Head title="Developer Portfolio">
                <link rel="preconnect" href="https://fonts.bunny.net" />
                <link href="https://fonts.bunny.net/css?family=instrument-sans:400,500,600|space-mono:400,700|inter:300,400,500,600,700" rel="stylesheet" />
                <meta name="description" content="Transcending Boundaries Through Code - Innovative software engineering portfolio showcasing futuristic web applications and digital experiences." />
            </Head>
            <div className="flex min-h-screen flex-col items-center bg-black p-0 text-white">
                {/* Futuristic Header with Glassmorphism */}
                <header className={`fixed top-0 z-50 w-full transition-all duration-300 ${isScrolled ? 'bg-black/80 backdrop-blur-md' : 'bg-transparent'}`}>
                    <div className="mx-auto max-w-7xl px-6 py-4">
                        <nav className="flex items-center justify-between">
                            <div className="text-xl font-bold text-cyan-400 font-['Space_Mono']">
                                John Doe
                            </div>
                            <div className="flex items-center gap-6">
                                <a href="#vision" className="px-4 py-2 text-sm hover:text-cyan-400 transition-colors">Vision</a>
                                <a href="#projects" className="px-4 py-2 text-sm hover:text-cyan-400 transition-colors">Projects</a>
                                <a href="#contact" className="px-4 py-2 text-sm hover:text-cyan-400 transition-colors">Contact</a>
                                {auth.user ? (
                                    <Link
                                        href={route('dashboard')}
                                        className="rounded-md border border-magenta-500 bg-transparent px-4 py-2 text-sm text-magenta-500 hover:bg-magenta-500 hover:text-white transition-all"
                                    >
                                        Dashboard
                                    </Link>
                                ) : (
                                    <>
                                        <Link
                                            href={route('login')}
                                            className="px-4 py-2 text-sm hover:text-cyan-400 transition-colors"
                                        >
                                            Log in
                                        </Link>
                                        <Link
                                            href={route('register')}
                                            className="rounded-md border border-cyan-400 bg-transparent px-4 py-2 text-sm text-cyan-400 hover:bg-cyan-400 hover:text-black transition-all"
                                        >
                                            Register
                                        </Link>
                                    </>
                                )}
                            </div>
                        </nav>
                    </div>
                </header>

                {/* Main Content */}
                <section className="w-full">
                    {/* Hero Section */}
                    <div className="relative w-full min-h-screen bg-gradient-to-b from-gray-950 to-gray-900 overflow-hidden">
                        {/* Background Pattern */}
                        <div className="absolute inset-0 opacity-10">
                            <div className="absolute inset-0 bg-[radial-gradient(circle_at_center,rgba(6,182,212,0.15)_0,rgba(0,0,0,0)_70%)]"></div>
                            <div className="absolute h-full w-full bg-[linear-gradient(to_right,rgba(6,182,212,0.1)_1px,transparent_1px),linear-gradient(to_bottom,rgba(6,182,212,0.1)_1px,transparent_1px)] bg-[size:4rem_4rem]"></div>
                        </div>

                        {/* Content */}
                        <div className="container mx-auto px-6 py-32 relative z-10">
                            <div className="grid grid-cols-1 lg:grid-cols-12 gap-12 items-center">
                                {/* Portrait Side */}
                                <div className="lg:col-span-5 flex justify-center">
                                    {/* Portrait Frame */}
                                    <div className="relative group">
                                        {/* Main Portrait */}
                                        <div className="relative z-10 w-64 h-64 md:w-80 md:h-80 lg:w-96 lg:h-96 rounded-full overflow-hidden bg-white dark:bg-gray-800 shadow-xl transition-all duration-500 group-hover:shadow-cyan-500/20 dark:group-hover:shadow-cyan-400/20">
                                            {/* Portrait Container */}
                                            <div className="absolute inset-[3px] rounded-full overflow-hidden p-1 bg-gradient-to-br from-cyan-400 via-purple-400 to-magenta-400 rotate-0 group-hover:rotate-180 transition-all duration-1000">
                                                {/* Portrait image */}
                                                <div className="w-full h-full rounded-full bg-white dark:bg-gray-800 overflow-hidden">
                                                    <img
                                                        src="/images/potrait/portrait-hero.jpg"
                                                        alt="John Doe - Full Stack Developer"
                                                        className="w-full h-full object-cover"
                                                        onError={(e) => {
                                                            const target = e.target as HTMLImageElement;
                                                            target.onerror = null;
                                                            // Replace with a gradient background and initials
                                                            target.parentElement.innerHTML = `
                                                                <div class="w-full h-full bg-gradient-to-br from-cyan-400/20 via-purple-400/20 to-magenta-400/20 flex items-center justify-center">
                                                                    <div class="relative">
                                                                        <span class="text-6xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-500 to-magenta-500">JD</span>
                                                                        <div class="absolute -bottom-2 left-0 right-0 h-1 bg-gradient-to-r from-cyan-400 to-magenta-400 rounded-full"></div>
                                                                    </div>
                                                                </div>
                                                            `;
                                                        }}
                                                    />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                {/* Text Content */}
                                <div className="lg:col-span-7">
                                    <h1 className="text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6">
                                        <span className="bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 via-purple-400 to-magenta-400">
                                            John Doe
                                        </span>
                                    </h1>
                                    <h2 className="text-2xl md:text-3xl text-gray-300 mb-8">Full Stack Developer</h2>
                                    <p className="text-lg text-gray-400 mb-10 max-w-2xl">
                                        Crafting digital experiences that transcend boundaries. Specializing in modern web applications with a focus on performance, accessibility, and cutting-edge design.
                                    </p>
                                    <div className="flex flex-wrap gap-4">
                                        <a href="#projects" className="px-8 py-3 bg-gradient-to-r from-cyan-500 to-cyan-600 text-white font-medium rounded-lg transition-all duration-300 shadow-sm hover:shadow-cyan-500/25 flex items-center">
                                            View Projects
                                            <svg className="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14 5l7 7-7 7M5 12h14" />
                                            </svg>
                                        </a>
                                        <a href="#contact" className="px-8 py-3 bg-transparent border border-purple-500 text-purple-400 hover:bg-purple-500 hover:text-white font-medium rounded-lg transition-all duration-300">
                                            Contact Me
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    {/* Contact Section */}
                    <div id="contact" className="py-24 bg-gray-950">
                        <div className="container mx-auto px-6">
                            <div className="text-center mb-16">
                                <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">Let's Connect</h2>
                                <p className="text-gray-400 max-w-2xl mx-auto">Have a project in mind or want to discuss potential opportunities? I'd love to hear from you.</p>
                            </div>

                            <div className="flex justify-center gap-6 mb-16">
                                <a href="mailto:john@example.com" className="flex items-center gap-2 px-4 py-2 bg-white/80 dark:bg-gray-800/80 rounded-full shadow-sm hover:shadow-md transition-all duration-300 text-gray-700 dark:text-gray-300 hover:text-cyan-600 dark:hover:text-cyan-400 backdrop-blur-sm">
                                    <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                                    </svg>
                                    john@example.com
                                </a>
                                <a href="tel:+1234567890" className="flex items-center gap-2 px-4 py-2 bg-white/80 dark:bg-gray-800/80 rounded-full shadow-sm hover:shadow-md transition-all duration-300 text-gray-700 dark:text-gray-300 hover:text-cyan-600 dark:hover:text-cyan-400 backdrop-blur-sm">
                                    <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                                    </svg>
                                    (123) 456-7890
                                </a>
                                <a href="https://calendly.com/yourusername" target="_blank" className="flex items-center gap-2 px-4 py-2 bg-white/80 dark:bg-gray-800/80 rounded-full shadow-sm hover:shadow-md transition-all duration-300 text-gray-700 dark:text-gray-300 hover:text-cyan-600 dark:hover:text-cyan-400 backdrop-blur-sm">
                                    <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                    </svg>
                                    Schedule a Call
                                </a>
                            </div>

                            <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-16">
                                {/* Contact Form */}
                                <div className="md:col-span-2 bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-2xl p-8 shadow-xl dark:shadow-gray-900/50 border border-gray-100 dark:border-gray-700 transition-all duration-500 relative overflow-hidden group hover:shadow-cyan-500/10 dark:hover:shadow-cyan-500/5">
                                    <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-cyan-400 via-purple-400 to-magenta-400"></div>
                                    <div className="absolute -right-20 -bottom-20 w-40 h-40 bg-gradient-to-br from-cyan-500/5 to-magenta-500/5 rounded-full blur-3xl group-hover:opacity-100 opacity-0 transition-opacity duration-700"></div>

                                    <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center">
                                        <svg className="w-6 h-6 mr-2 text-cyan-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
                                        </svg>
                                        Send Me a Message
                                    </h3>
                                    <form className="space-y-6">
                                        <div className="grid gap-6 md:grid-cols-2">
                                            <div className="group">
                                                <label htmlFor="name" className="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300">Your Name</label>
                                                <div className="relative">
                                                    <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                        <svg className="w-5 h-5 text-gray-400 group-focus-within:text-cyan-500 transition-colors duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                                        </svg>
                                                    </div>
                                                    <input
                                                        type="text"
                                                        id="name"
                                                        className="w-full rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700/50 p-3 pl-10 text-gray-900 dark:text-white placeholder-gray-500 focus:border-cyan-500 dark:focus:border-cyan-400 focus:ring-1 focus:ring-cyan-500 dark:focus:ring-cyan-400 transition-all"
                                                        placeholder="John Doe"
                                                        required
                                                    />
                                                </div>
                                            </div>
                                            <div className="group">
                                                <label htmlFor="email" className="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300">Your Email</label>
                                                <div className="relative">
                                                    <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                        <svg className="w-5 h-5 text-gray-400 group-focus-within:text-cyan-500 transition-colors duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                                                        </svg>
                                                    </div>
                                                    <input
                                                        type="email"
                                                        id="email"
                                                        className="w-full rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700/50 p-3 pl-10 text-gray-900 dark:text-white placeholder-gray-500 focus:border-cyan-500 dark:focus:border-cyan-400 focus:ring-1 focus:ring-cyan-500 dark:focus:ring-cyan-400 transition-all"
                                                        placeholder="name@example.com"
                                                        required
                                                    />
                                                </div>
                                            </div>
                                        </div>
                                        <div className="group">
                                            <label htmlFor="subject" className="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300">Subject</label>
                                            <div className="relative">
                                                <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                    <svg className="w-5 h-5 text-gray-400 group-focus-within:text-cyan-500 transition-colors duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 20l4-16m2 16l4-16M6 9h14M4 15h14" />
                                                    </svg>
                                                </div>
                                                <input
                                                    type="text"
                                                    id="subject"
                                                    className="w-full rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700/50 p-3 pl-10 text-gray-900 dark:text-white placeholder-gray-500 focus:border-cyan-500 dark:focus:border-cyan-400 focus:ring-1 focus:ring-cyan-500 dark:focus:ring-cyan-400 transition-all"
                                                    placeholder="Let me know how I can help you"
                                                    required
                                                />
                                            </div>
                                        </div>
                                        <div className="group">
                                            <label htmlFor="message" className="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300">Your Message</label>
                                            <div className="relative">
                                                <div className="absolute top-3 left-3 flex items-start pointer-events-none">
                                                    <svg className="w-5 h-5 text-gray-400 group-focus-within:text-cyan-500 transition-colors duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                                                    </svg>
                                                </div>
                                                <textarea
                                                    id="message"
                                                    rows={4}
                                                    className="w-full rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700/50 p-3 pl-10 text-gray-900 dark:text-white placeholder-gray-500 focus:border-cyan-500 dark:focus:border-cyan-400 focus:ring-1 focus:ring-cyan-500 dark:focus:ring-cyan-400 transition-all"
                                                    placeholder="Your message..."
                                                    required
                                                ></textarea>
                                            </div>
                                        </div>
                                        <button
                                            type="submit"
                                            className="group relative px-6 py-3 bg-gradient-to-r from-cyan-500 via-purple-500 to-magenta-500 hover:from-cyan-600 hover:via-purple-600 hover:to-magenta-600 text-white font-medium rounded-lg transition-all duration-300 shadow-sm hover:shadow-[0_0_20px_rgba(168,85,247,0.5)] flex items-center justify-center overflow-hidden"
                                        >
                                            <span className="relative z-10 flex items-center">
                                                Send Message
                                                <svg className="w-5 h-5 ml-2 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 5l7 7-7 7M5 12h14" />
                                                </svg>
                                            </span>
                                            <span className="absolute top-0 left-0 w-full h-full bg-white opacity-0 group-hover:opacity-20 transition-opacity duration-300"></span>
                                        </button>
                                    </form>
                                </div>

                                {/* Recommendations */}
                                <div className="rounded-xl bg-gray-900/60 p-8 backdrop-blur-sm border border-gray-800 shadow-[0_0_30px_rgba(236,72,153,0.1)] relative overflow-hidden">
                                    <div className="flex items-center justify-between mb-6">
                                        <h3 className="text-xl font-bold text-magenta-400 flex items-center">
                                            <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
                                            </svg>
                                            Recommendations
                                        </h3>
                                        <div className="flex space-x-2">
                                            <button id="prevRecommendation" className="p-2 rounded-full bg-gray-800 hover:bg-gray-700 text-gray-400 hover:text-white transition-colors">
                                                <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                                                </svg>
                                            </button>
                                            <button id="nextRecommendation" className="p-2 rounded-full bg-gray-800 hover:bg-gray-700 text-gray-400 hover:text-white transition-colors">
                                                <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                                                </svg>
                                            </button>
                                        </div>
                                    </div>

                                    <div className="relative overflow-hidden">
                                        <div id="recommendationsCarousel" className="flex transition-transform duration-500 ease-in-out">
                                            {/* Recommendation 1 */}
                                            <div className="w-full flex-shrink-0">
                                                <div className="bg-gray-800/50 rounded-lg p-6 backdrop-blur-sm border border-gray-700 h-full">
                                                    <div className="flex items-center mb-4">
                                                        <div className="mr-4 relative">
                                                            <div className="w-12 h-12 rounded-full overflow-hidden border-2 border-cyan-500/30">
                                                                <img
                                                                    src="/images/recommendations/simon.jpg"
                                                                    alt="Simon Tivavenge"
                                                                    className="w-full h-full object-cover"
                                                                    onError={(e) => {
                                                                        const target = e.target as HTMLImageElement;
                                                                        target.onerror = null;
                                                                        target.parentElement.innerHTML = '<div class="flex h-full w-full items-center justify-center bg-gradient-to-br from-cyan-500/20 to-magenta-500/20 text-white font-bold">ST</div>';
                                                                    }}
                                                                />
                                                            </div>
                                                        </div>
                                                        <div>
                                                            <div className="flex">
                                                                {[...Array(5)].map((_, i) => (
                                                                    <svg key={i} className="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                                                    </svg>
                                                                ))}
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <p className="text-gray-300 mb-3 italic text-base leading-relaxed">
                                                        "John is an exceptional developer who consistently delivers high-quality work. His attention to detail and problem-solving skills are outstanding. He's not just technically proficient but also great at communicating complex ideas in simple terms."
                                                    </p>
                                                    <div>
                                                        <p className="text-white font-medium">Simon Tivavenge</p>
                                                        <p className="text-cyan-400 text-sm font-medium">CTO at TechInnovate Solutions</p>
                                                    </div>
                                                </div>
                                            </div>

                                            {/* Recommendation 2 */}
                                            <div className="w-full flex-shrink-0">
                                                <div className="bg-gray-800/50 rounded-lg p-6 backdrop-blur-sm border border-gray-700 h-full">
                                                    <div className="flex items-center mb-4">
                                                        <div className="mr-4 relative">
                                                            <div className="w-12 h-12 rounded-full overflow-hidden border-2 border-purple-500/30">
                                                                <img
                                                                    src="/images/recommendations/jane.jpg"
                                                                    alt="Jane Smith"
                                                                    className="w-full h-full object-cover"
                                                                    onError={(e) => {
                                                                        const target = e.target as HTMLImageElement;
                                                                        target.onerror = null;
                                                                        target.parentElement.innerHTML = '<div class="flex h-full w-full items-center justify-center bg-gradient-to-br from-purple-500/20 to-cyan-500/20 text-white font-bold">JS</div>';
                                                                    }}
                                                                />
                                                            </div>
                                                        </div>
                                                        <div>
                                                            <div className="flex">
                                                                {[...Array(5)].map((_, i) => (
                                                                    <svg key={i} className="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                                                    </svg>
                                                                ))}
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <p className="text-gray-300 mb-3 italic text-base leading-relaxed">
                                                        "Working with John on our company's digital transformation was a game-changer. His innovative approaches and deep technical knowledge helped us implement solutions that significantly improved our operational efficiency. He's a true professional who delivers beyond expectations."
                                                    </p>
                                                    <div>
                                                        <p className="text-white font-medium">Jane Smith</p>
                                                        <p className="text-cyan-400 text-sm font-medium">Product Manager at Digital Frontiers</p>
                                                    </div>
                                                </div>
                                            </div>

                                            {/* Recommendation 3 */}
                                            <div className="w-full flex-shrink-0">
                                                <div className="bg-gray-800/50 rounded-lg p-6 backdrop-blur-sm border border-gray-700 h-full">
                                                    <div className="flex items-center mb-4">
                                                        <div className="mr-4 relative">
                                                            <div className="w-12 h-12 rounded-full overflow-hidden border-2 border-magenta-500/30">
                                                                <img
                                                                    src="/images/recommendations/dube.jpg"
                                                                    alt="Dr. S. Dube"
                                                                    className="w-full h-full object-cover"
                                                                    onError={(e) => {
                                                                        const target = e.target as HTMLImageElement;
                                                                        target.onerror = null;
                                                                        target.parentElement.innerHTML = '<div class="flex h-full w-full items-center justify-center bg-gradient-to-br from-cyan-500/20 to-magenta-500/20 text-white font-bold">SD</div>';
                                                                    }}
                                                                />
                                                            </div>
                                                        </div>
                                                        <div>
                                                            <div className="flex">
                                                                {[...Array(5)].map((_, i) => (
                                                                    <svg key={i} className="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                                                    </svg>
                                                                ))}
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <p className="text-gray-300 mb-3 italic text-base leading-relaxed">
                                                        "John demonstrates exceptional technical skills and leadership in software development projects. His academic background combined with practical experience makes him a standout developer. His research contributions to our department's projects have been invaluable, showing both technical depth and innovative thinking."
                                                    </p>
                                                    <div>
                                                        <p className="text-white font-medium">Dr. S. Dube</p>
                                                        <p className="text-cyan-400 text-sm font-medium">Senior Lecturer - National University of Science and Technology</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            {/* Call to Action */}
                            <div className="bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 rounded-2xl p-10 shadow-xl border border-gray-800 relative overflow-hidden">
                                <div className="absolute top-0 left-0 w-full h-full bg-[radial-gradient(circle_at_30%_20%,rgba(236,72,153,0.1)_0,rgba(0,0,0,0)_60%)]"></div>
                                <div className="relative z-10 flex flex-col md:flex-row items-center justify-between gap-6">
                                    <div>
                                        <h3 className="text-2xl font-bold text-white mb-2">Ready to start your next project?</h3>
                                        <p className="text-gray-400 max-w-xl">Let's collaborate to create something amazing that exceeds your expectations and delivers real value.</p>
                                    </div>
                                    <a href="mailto:john@example.com" className="group relative px-8 py-4 bg-gradient-to-r from-magenta-500 to-purple-600 hover:from-magenta-600 hover:to-purple-700 text-white font-medium rounded-lg transition-all duration-300 shadow-sm hover:shadow-[0_0_20px_rgba(236,72,153,0.5)] flex items-center justify-center overflow-hidden">
                                        <span className="relative z-10 flex items-center">
                                            Get in Touch
                                            <svg className="w-5 h-5 ml-2 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14 5l7 7-7 7M5 12h14" />
                                            </svg>
                                        </span>
                                    </a>
                                </div>
                            </div>
                        </div>

                        {/* Footer */}
                        <div className="text-center text-gray-500 text-sm">
                            <p>© {new Date().getFullYear()} John Doe. All rights reserved.</p>
                            <p className="mt-2">Designed with a vision for 2025 and beyond.</p>
                        </div>
                    </div>
                </section>
            </div>
        </>
    );
}
