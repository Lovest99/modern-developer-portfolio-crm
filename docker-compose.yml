version: '3'

services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: portfolio_app
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - portfolio_network
    depends_on:
      - db
      - redis

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: portfolio_webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/nginx/ssl/
    networks:
      - portfolio_network
    depends_on:
      - app

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: portfolio_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - portfolio_dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - portfolio_network

  # Redis Service
  redis:
    image: redis:alpine
    container_name: portfolio_redis
    restart: unless-stopped
    networks:
      - portfolio_network

  # Node Service for Frontend Build
  node:
    image: node:18-alpine
    container_name: portfolio_node
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    command: sh -c "npm ci && npm run build"
    networks:
      - portfolio_network

networks:
  portfolio_network:
    driver: bridge

volumes:
  portfolio_dbdata:
    driver: local
